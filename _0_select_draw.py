import streamlit as st
from datetime import datetime, timedelta

# ‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡πÄ‡∏ß‡∏•‡∏≤ "‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏á" ‡∏Ç‡∏≠‡∏á‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏á‡∏ß‡∏î ‡πÄ‡∏ä‡πà‡∏ô 15:00 ‡∏ô.
CLOSE_TIME_HOUR = 15
CLOSE_TIME_MINUTE = 0

def get_time_remaining(closing_datetime):
    """‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡∏Å‡πà‡∏≠‡∏ô‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏á"""
    now = datetime.now()
    delta = closing_datetime - now
    if delta.total_seconds() <= 0:
        return "‚õî ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏á‡πÅ‡∏•‡πâ‡∏ß", True
    else:
        hours, remainder = divmod(int(delta.total_seconds()), 3600)
        minutes, seconds = divmod(remainder, 60)
        return f"‚è≥ ‡πÄ‡∏´‡∏•‡∏∑‡∏≠‡πÄ‡∏ß‡∏•‡∏≤: {hours:02d}:{minutes:02d}:{seconds:02d}", False

def select_draw():
    st.subheader("üìÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏á‡∏ß‡∏î‡∏´‡∏ß‡∏¢‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏ó‡∏á")

    # ‡πÉ‡∏´‡πâ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà ‡πÇ‡∏î‡∏¢‡∏Ñ‡πà‡∏≤‡∏õ‡∏£‡∏¥‡∏¢‡∏≤‡∏¢‡πÄ‡∏õ‡πá‡∏ô‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ
    today = datetime.today()
    default_draw_date = st.session_state.get("draw_date", today.date())

    draw_date = st.date_input(
        "‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà‡∏á‡∏ß‡∏î‡∏´‡∏ß‡∏¢",
        value=default_draw_date,
        min_value=today.date(),
        key="draw_date_input"
    )

    # ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏á‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ô‡∏±‡πâ‡∏ô
    close_time = datetime.combine(draw_date, datetime.min.time()) + timedelta(
        hours=CLOSE_TIME_HOUR, minutes=CLOSE_TIME_MINUTE
    )

    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏á
    st.write(f"üïí ‡∏õ‡∏¥‡∏î‡∏£‡∏±‡∏ö‡πÅ‡∏ó‡∏á‡πÄ‡∏ß‡∏•‡∏≤: {close_time.strftime('%H:%M ‡∏ô.')} ‡∏Ç‡∏≠‡∏á‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà {draw_date.strftime('%d/%m/%Y')}")

    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏ß‡∏•‡∏≤‡∏ô‡∏±‡∏ö‡∏ñ‡∏≠‡∏¢‡∏´‡∏•‡∏±‡∏á
    time_left_str, is_closed = get_time_remaining(close_time)
    if is_closed:
        st.error(time_left_str)
    else:
        st.info(time_left_str)

    # ‡πÄ‡∏Å‡πá‡∏ö‡∏Ñ‡πà‡∏≤ draw_date ‡πÅ‡∏•‡∏∞ close_time ‡πÑ‡∏ß‡πâ‡πÉ‡∏ô session_state
    st.session_state["draw_date"] = draw_date
    st.session_state["draw_close_time"] = close_time
    st.session_state["draw_closed"] = is_closed

# ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡πÉ‡∏ô app.py ‡πÅ‡∏ö‡∏ö‡∏ô‡∏µ‡πâ:
# import _0_select_draw
# _0_select_draw.select_draw()
