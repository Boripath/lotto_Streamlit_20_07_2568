import streamlit as st
import re
import itertools

def input_numbers(bet_type, double_mode):
    st.subheader("üî¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏ó‡∏á")

    # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏ô session_state
    st.session_state.setdefault("selected_numbers", [])
    st.session_state.setdefault("input_text", "")

    # ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç
    input_text = st.text_area(
        "‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (‡πÅ‡∏¢‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á, ‡∏Ñ‡∏≠‡∏°‡∏°‡πà‡∏≤, ‡∏Ç‡∏µ‡∏î ‡∏Ø‡∏•‡∏Ø):",
        value=st.session_state.input_text,
        height=100,
        key="input_text_area"
    )

    def extract_numbers(text, length):
        clean_text = re.sub(r"[^0-9]", "", text)
        return [clean_text[i:i+length] for i in range(0, len(clean_text), length) if len(clean_text[i:i+length]) == length]

    numbers = []
    if double_mode:
        if bet_type == "2 ‡∏ï‡∏±‡∏ß":
            numbers = [f"{i}{i}" for i in range(10)]
        elif bet_type == "3 ‡∏ï‡∏±‡∏ß":
            numbers = [f"{i}{i}{i}" for i in range(10)]
    else:
        if bet_type == "2 ‡∏ï‡∏±‡∏ß" or bet_type in ["‡∏£‡∏π‡∏î", "19 ‡∏õ‡∏£‡∏∞‡∏ï‡∏π"]:
            numbers = extract_numbers(input_text, 2)
        elif bet_type in ["3 ‡∏ï‡∏±‡∏ß"]:
            numbers = extract_numbers(input_text, 3)
        elif bet_type == "6 ‡∏Å‡∏•‡∏±‡∏ö":
            base_numbers = extract_numbers(input_text, 3)
            numbers_set = set()
            for num in base_numbers:
                perms = set([''.join(p) for p in itertools.permutations(num)])
                numbers_set.update(perms)
            numbers = sorted(numbers_set)
        elif bet_type == "‡∏ß‡∏¥‡πà‡∏á":
            numbers = list(re.sub(r"[^0-9]", "", input_text))

    st.session_state.selected_numbers = numbers
    st.session_state.input_text = input_text

    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡πÑ‡∏î‡πâ + ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö
    st.markdown("#### üìã ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å")
    if numbers:
        cols = st.columns(10)
        for idx, num in enumerate(numbers):
            if cols[idx % 10].button(f"‚ùå {num}", key=f"del_{idx}"):
                st.session_state.selected_numbers.remove(num)
                st.session_state.input_text = " ".join(st.session_state.selected_numbers)
                st.rerun()  # üîÑ ‡πÉ‡∏ä‡πâ st.rerun() ‡πÅ‡∏ó‡∏ô experimental
    else:
        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏Ç ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó")

    return st.session_state.selected_numbers
