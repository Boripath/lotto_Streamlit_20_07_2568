import streamlit as st
import re

def input_numbers(bet_type, double_mode):
    st.subheader("üî¢ ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏à‡∏∞‡πÅ‡∏ó‡∏á")

    # ‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡πÉ‡∏ô session_state
    st.session_state.setdefault("selected_numbers", [])
    st.session_state.setdefault("input_text", "")

    # ‡∏ä‡πà‡∏≠‡∏á‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç
    input_text = st.text_area(
        "‡∏Å‡∏£‡∏≠‡∏Å‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç (‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÅ‡∏¢‡∏Å‡∏î‡πâ‡∏ß‡∏¢‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á, ‡∏Ñ‡∏≠‡∏°‡∏°‡πà‡∏≤, ‡∏Ç‡∏µ‡∏î ‡∏Ø‡∏•‡∏Ø):",
        value=st.session_state.input_text,
        height=100,
        key="input_text_area"
    )

    # ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ä‡πà‡∏ß‡∏¢: ‡∏ï‡∏±‡∏î‡πÄ‡∏•‡∏Ç‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å
    def extract_numbers(text, length):
        clean_text = re.sub(r"[^0-9]", "", text)
        return [clean_text[i:i+length] for i in range(0, len(clean_text), length) if len(clean_text[i:i+length]) == length]

    # ‡∏ï‡∏±‡∏î‡πÄ‡∏•‡∏Ç‡∏ï‡∏≤‡∏° bet_type ‡πÅ‡∏•‡∏∞ double_mode
    numbers = []
    if double_mode:
        # ‡πÇ‡∏´‡∏°‡∏î‡πÄ‡∏ö‡∏¥‡πâ‡∏•/‡∏ï‡∏≠‡∏á
        if bet_type == "2 ‡∏ï‡∏±‡∏ß":
            numbers = [f"{i}{i}" for i in range(10)]
        elif bet_type == "3 ‡∏ï‡∏±‡∏ß":
            numbers = [f"{i}{i}{i}" for i in range(10)]
    else:
        if bet_type == "2 ‡∏ï‡∏±‡∏ß" or bet_type == "‡∏£‡∏π‡∏î" or bet_type == "19 ‡∏õ‡∏£‡∏∞‡∏ï‡∏π":
            numbers = extract_numbers(input_text, 2)
        elif bet_type == "3 ‡∏ï‡∏±‡∏ß" or bet_type == "6 ‡∏Å‡∏•‡∏±‡∏ö":
            numbers = extract_numbers(input_text, 3)
        elif bet_type == "‡∏ß‡∏¥‡πà‡∏á":
            # ‡∏ï‡∏±‡∏î‡∏ó‡∏µ‡∏•‡∏∞‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏î‡∏µ‡∏¢‡∏ß
            numbers = list(re.sub(r"[^0-9]", "", input_text))

    # ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡πÄ‡∏•‡∏Ç‡πÑ‡∏ß‡πâ‡πÉ‡∏ô session_state
    st.session_state.selected_numbers = numbers
    st.session_state.input_text = input_text

    # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡πÅ‡∏•‡πâ‡∏ß + ‡∏õ‡∏∏‡πà‡∏°‡∏•‡∏ö‡πÅ‡∏ï‡πà‡∏•‡∏∞‡πÄ‡∏•‡∏Ç
    st.markdown("#### üìã ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å")
    if numbers:
        cols = st.columns(10)
        for idx, num in enumerate(numbers):
            if cols[idx % 10].button(f"‚ùå {num}", key=f"del_{idx}"):
                st.session_state.selected_numbers.remove(num)
                # ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ó‡∏µ‡πà‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà‡πÄ‡∏õ‡πá‡∏ô‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÄ‡∏´‡∏•‡∏∑‡∏≠
                st.session_state.input_text = " ".join(st.session_state.selected_numbers)
                st.experimental_rerun()
    else:
        st.info("‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏°‡∏µ‡πÄ‡∏•‡∏Ç‡∏ó‡∏µ‡πà‡πÅ‡∏¢‡∏Å‡∏≠‡∏≠‡∏Å‡∏°‡∏≤ ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÄ‡∏•‡∏Ç‡πÉ‡∏´‡πâ‡∏Ñ‡∏£‡∏ö‡∏ï‡∏≤‡∏°‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å")

    # ‡∏Ñ‡∏∑‡∏ô‡∏Ñ‡πà‡∏≤‡πÄ‡∏•‡∏Ç‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
    return st.session_state.selected_numbers
